<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Item', 'doctrine');

/**
 * BaseItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $type
 * @property string $title
 * @property string $route
 * @property string $image
 * @property integer $year
 * @property string $summary
 * @property string $body
 * @property integer $sort
 * @property integer $nb_views
 * @property integer $is_active
 * @property integer $is_featured
 * @property integer $created_aid
 * @property integer $updated_aid
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $Link
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getType()        Returns the current record's "type" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getRoute()       Returns the current record's "route" value
 * @method string              getImage()       Returns the current record's "image" value
 * @method integer             getYear()        Returns the current record's "year" value
 * @method string              getSummary()     Returns the current record's "summary" value
 * @method string              getBody()        Returns the current record's "body" value
 * @method integer             getSort()        Returns the current record's "sort" value
 * @method integer             getNbViews()     Returns the current record's "nb_views" value
 * @method integer             getIsActive()    Returns the current record's "is_active" value
 * @method integer             getIsFeatured()  Returns the current record's "is_featured" value
 * @method integer             getCreatedAid()  Returns the current record's "created_aid" value
 * @method integer             getUpdatedAid()  Returns the current record's "updated_aid" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()   Returns the current record's "updated_at" value
 * @method Doctrine_Collection getLink()        Returns the current record's "Link" collection
 * @method Item                setId()          Sets the current record's "id" value
 * @method Item                setType()        Sets the current record's "type" value
 * @method Item                setTitle()       Sets the current record's "title" value
 * @method Item                setRoute()       Sets the current record's "route" value
 * @method Item                setImage()       Sets the current record's "image" value
 * @method Item                setYear()        Sets the current record's "year" value
 * @method Item                setSummary()     Sets the current record's "summary" value
 * @method Item                setBody()        Sets the current record's "body" value
 * @method Item                setSort()        Sets the current record's "sort" value
 * @method Item                setNbViews()     Sets the current record's "nb_views" value
 * @method Item                setIsActive()    Sets the current record's "is_active" value
 * @method Item                setIsFeatured()  Sets the current record's "is_featured" value
 * @method Item                setCreatedAid()  Sets the current record's "created_aid" value
 * @method Item                setUpdatedAid()  Sets the current record's "updated_aid" value
 * @method Item                setCreatedAt()   Sets the current record's "created_at" value
 * @method Item                setUpdatedAt()   Sets the current record's "updated_at" value
 * @method Item                setLink()        Sets the current record's "Link" collection
 * 
 * @package    imdb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseItem extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('item');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('type', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('route', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('image', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('year', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('summary', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nb_views', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_featured', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Link', array(
             'local' => 'id',
             'foreign' => 'item_id'));
    }
}