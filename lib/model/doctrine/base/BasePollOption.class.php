<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PollOption', 'doctrine');

/**
 * BasePollOption
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $poll_id
 * @property string $body
 * @property integer $nb_vote
 * @property integer $user_id
 * @property string $ip
 * @property integer $is_active
 * @property integer $sort
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $created_aid
 * @property integer $updated_aid
 * @property Poll $Poll
 * @property Admin $Admin
 * @property Admin $Admin_3
 * 
 * @method integer    getId()          Returns the current record's "id" value
 * @method integer    getPollId()      Returns the current record's "poll_id" value
 * @method string     getBody()        Returns the current record's "body" value
 * @method integer    getNbVote()      Returns the current record's "nb_vote" value
 * @method integer    getUserId()      Returns the current record's "user_id" value
 * @method string     getIp()          Returns the current record's "ip" value
 * @method integer    getIsActive()    Returns the current record's "is_active" value
 * @method integer    getSort()        Returns the current record's "sort" value
 * @method timestamp  getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp  getUpdatedAt()   Returns the current record's "updated_at" value
 * @method integer    getCreatedAid()  Returns the current record's "created_aid" value
 * @method integer    getUpdatedAid()  Returns the current record's "updated_aid" value
 * @method Poll       getPoll()        Returns the current record's "Poll" value
 * @method Admin      getAdmin()       Returns the current record's "Admin" value
 * @method Admin      getAdmin3()      Returns the current record's "Admin_3" value
 * @method PollOption setId()          Sets the current record's "id" value
 * @method PollOption setPollId()      Sets the current record's "poll_id" value
 * @method PollOption setBody()        Sets the current record's "body" value
 * @method PollOption setNbVote()      Sets the current record's "nb_vote" value
 * @method PollOption setUserId()      Sets the current record's "user_id" value
 * @method PollOption setIp()          Sets the current record's "ip" value
 * @method PollOption setIsActive()    Sets the current record's "is_active" value
 * @method PollOption setSort()        Sets the current record's "sort" value
 * @method PollOption setCreatedAt()   Sets the current record's "created_at" value
 * @method PollOption setUpdatedAt()   Sets the current record's "updated_at" value
 * @method PollOption setCreatedAid()  Sets the current record's "created_aid" value
 * @method PollOption setUpdatedAid()  Sets the current record's "updated_aid" value
 * @method PollOption setPoll()        Sets the current record's "Poll" value
 * @method PollOption setAdmin()       Sets the current record's "Admin" value
 * @method PollOption setAdmin3()      Sets the current record's "Admin_3" value
 * 
 * @package    imdb
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePollOption extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('poll_option');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('poll_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('nb_vote', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Poll', array(
             'local' => 'poll_id',
             'foreign' => 'id'));

        $this->hasOne('Admin', array(
             'local' => 'created_aid',
             'foreign' => 'id'));

        $this->hasOne('Admin as Admin_3', array(
             'local' => 'updated_aid',
             'foreign' => 'id'));
    }
}