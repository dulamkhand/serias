<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Page', 'doctrine');

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $type
 * @property string $title
 * @property string $title_de
 * @property string $title_it
 * @property string $title_ko
 * @property string $route
 * @property string $content
 * @property string $content_de
 * @property string $content_it
 * @property string $content_ko
 * @property integer $sort
 * @property integer $is_active
 * @property integer $is_featured
 * @property integer $created_aid
 * @property integer $updated_aid
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $nb_views
 * @property Admin $Admin
 * @property Admin $Admin_2
 * @property Doctrine_Collection $Item
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getType()        Returns the current record's "type" value
 * @method string              getTitle()       Returns the current record's "title" value
 * @method string              getTitleDe()     Returns the current record's "title_de" value
 * @method string              getTitleIt()     Returns the current record's "title_it" value
 * @method string              getTitleKo()     Returns the current record's "title_ko" value
 * @method string              getRoute()       Returns the current record's "route" value
 * @method string              getContent()     Returns the current record's "content" value
 * @method string              getContentDe()   Returns the current record's "content_de" value
 * @method string              getContentIt()   Returns the current record's "content_it" value
 * @method string              getContentKo()   Returns the current record's "content_ko" value
 * @method integer             getSort()        Returns the current record's "sort" value
 * @method integer             getIsActive()    Returns the current record's "is_active" value
 * @method integer             getIsFeatured()  Returns the current record's "is_featured" value
 * @method integer             getCreatedAid()  Returns the current record's "created_aid" value
 * @method integer             getUpdatedAid()  Returns the current record's "updated_aid" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()   Returns the current record's "updated_at" value
 * @method integer             getNbViews()     Returns the current record's "nb_views" value
 * @method Admin               getAdmin()       Returns the current record's "Admin" value
 * @method Admin               getAdmin2()      Returns the current record's "Admin_2" value
 * @method Doctrine_Collection getItem()        Returns the current record's "Item" collection
 * @method Page                setId()          Sets the current record's "id" value
 * @method Page                setType()        Sets the current record's "type" value
 * @method Page                setTitle()       Sets the current record's "title" value
 * @method Page                setTitleDe()     Sets the current record's "title_de" value
 * @method Page                setTitleIt()     Sets the current record's "title_it" value
 * @method Page                setTitleKo()     Sets the current record's "title_ko" value
 * @method Page                setRoute()       Sets the current record's "route" value
 * @method Page                setContent()     Sets the current record's "content" value
 * @method Page                setContentDe()   Sets the current record's "content_de" value
 * @method Page                setContentIt()   Sets the current record's "content_it" value
 * @method Page                setContentKo()   Sets the current record's "content_ko" value
 * @method Page                setSort()        Sets the current record's "sort" value
 * @method Page                setIsActive()    Sets the current record's "is_active" value
 * @method Page                setIsFeatured()  Sets the current record's "is_featured" value
 * @method Page                setCreatedAid()  Sets the current record's "created_aid" value
 * @method Page                setUpdatedAid()  Sets the current record's "updated_aid" value
 * @method Page                setCreatedAt()   Sets the current record's "created_at" value
 * @method Page                setUpdatedAt()   Sets the current record's "updated_at" value
 * @method Page                setNbViews()     Sets the current record's "nb_views" value
 * @method Page                setAdmin()       Sets the current record's "Admin" value
 * @method Page                setAdmin2()      Sets the current record's "Admin_2" value
 * @method Page                setItem()        Sets the current record's "Item" collection
 * 
 * @package    uaral
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('type', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('title_de', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('title_it', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('title_ko', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('route', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('content_de', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('content_it', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('content_ko', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_featured', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_aid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nb_views', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Admin', array(
             'local' => 'created_aid',
             'foreign' => 'id'));

        $this->hasOne('Admin as Admin_2', array(
             'local' => 'updated_aid',
             'foreign' => 'id'));

        $this->hasMany('Item', array(
             'local' => 'id',
             'foreign' => 'page_id'));
    }
}