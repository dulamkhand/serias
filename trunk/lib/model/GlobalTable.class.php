<?php

/**
 * CouponTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class GlobalTable extends Doctrine_Table
{
    private static function params($tableName, $q, $params = array())
    {
        $q->from($tableName);

        # id
        if(isset($params['id']) && $params['id'] != null)
            $q->andWhere('id = ?', $params['id']);
        if(isset($params['idO']) && $params['idO'] != null)
            $q->andWhere('id <> ?', $params['idO']);
        if(isset($params['ids']) && sizeof($params['ids']))
            $q->andWhereIn('id', $params['ids']);
        if(isset($params['idsO']) && sizeof($params['idsO']))
            $q->andWhereNotIn('id', $params['idsO']);
            
        # route
        if(isset($params['route']) && $params['route'] != null)
            $q->andWhere('route= ?', $params['route']);

        # page.type
        if(isset($params['type']) && $params['type'] != null)
            $q->andWhere('type= ?', $params['type']);
            
				# best.type
        if(isset($params['bestType']) && $params['bestType'] != null)
            $q->andWhere('best_type = ?', $params['bestType']);
            
        # image., rate. objectType, objectId
        if(isset($params['objectType']) && $params['objectType'] != null)
            $q->andWhere('object_type = ?', $params['objectType']);
        if(isset($params['objectId']) && $params['objectId'] != null)
            $q->andWhere('object_id = ?', $params['objectId']);
            
        # banner.position
        if(isset($params['position']) && $params['position'] != null)
            $q->andWhere('position = ?', $params['position']);
            
        # genres
        if(isset($params['genres']) && $params['genres'] != null && sizeof($params['genres'])) {
            foreach($params['genres'] as $genre) {
                $q->orWhere('genre LIKE ?', '%'.$genre.'%');
            }
        }

        # itemId
        if(isset($params['itemId']) && $params['itemId'] != null)
            $q->andWhere('item_id = ? ', $params['itemId']);

        # userId
        if(isset($params['userId']) && $params['userId'] != null)
            $q->andWhere('user_id = ? ', $params['userId']);
            
        # fullname
        if(isset($params['fullname']) && $params['fullname'] != null)
            $q->andWhere('fullname = ? ', $params['fullname']);

        # filters
        if(isset($params['y']) && $params['y'] != null)
            $q->andWhere('year = ? ', $params['y']);
        if(isset($params['g']) && $params['g'] != null)
            $q->andWhere('genre like ? ', '%'.$params['g'].'%');
        if(isset($params['l']) && $params['l'] != null)
            $q->andWhere('title like ?', $params['l'].'%');
            
        if(isset($params['rightside']) && $params['rightside'] != null)
            $q->andWhere('boxoffice > 0 OR thisweek > 0 OR comingsoon > 0');

        # isActive
        if(isset($params['isActive'])) {
            if($params['isActive'] != "all" && in_array($params['isActive'], array('0', '1')))
                $q->andWhere('is_active = ?', $params['isActive']);
        } else {
            $q->andWhere('is_active = ?', 1);
        }
        
        # isFeatured
        if(isset($params['isFeatured']) && in_array($params['isFeatured'], array('0', '1'))) 
            $q->andWhere('is_featured = ?', 1);
        if(isset($params['isTop']) && in_array($params['isTop'], array('0', '1'))) 
            $q->andWhere('is_top = ?', 1);
        if(isset($params['isNew']) && in_array($params['isNew'], array('0', '1'))) 
            $q->andWhere('is_new = ?', 1);

        # keyword
        if(isset($params['sItem']) && $params['sItem'] != null)
            $q->andWhere('title LIKE ? ', array('%'.$params['sItem'].'%'));
        if(isset($params['sNews']) && $params['sNews'] != null)
            $q->andWhere('title LIKE ? OR summary LIKE ? OR body LIKE ?', array('%'.$params['sNews'].'%','%'.$params['sNews'].'%','%'.$params['sNews'].'%'));

        # group, order, limit
        if(isset($params['groupBy']) && $params['groupBy']) 
            $q->groupBy($params['groupBy']);

        if(isset($params['offset']) && $params['offset'])
            $q->offset($params['offset']);
        
        $limit = isset($params['limit']) ? $params['limit'] : sfConfig::get('app_limit', 30);
        $q->limit($limit);
  
        $order = isset($params['orderBy']) ? $params['orderBy'] : 'created_at DESC';
        $q->orderBy($order);

        return $q;
    }
    

    public static function doExecute($tableName, $columns = array(), $params = array())
    {
        $q = Doctrine_Query::create()->select(join(',', $columns));
        $q = self::params($tableName, $q, $params);
        return $q->execute();
    }
    
  
    public static function doFetchArray($tableName, $columns = array(), $params = array())
    {
        $q = Doctrine_Query::create()->select(join(',', $columns));
        $q = self::params($tableName, $q, $params);
        return $q->fetchArray();
    }
    
    
    public static function doFetchSelection($tableName, $fieldName, $columns = array(), $params = array())
    {
        $res = array();
        $rss = self::doFetchArray($tableName, $columns, $params);
        foreach ($rss as $rs) 
        {
            $res[$rs['id']] = $rs[$fieldName];
        }
        return $res;
    }
  
    public static function doFetchSelectionItem($tableName, $params = array())
    {
        $res = array();
        $rss = self::doFetchArray($tableName, array('id, title, year'), $params);
        foreach ($rss as $rs) {
            $res[$rs['id']] = $rs['title'].' ('.$rs['year'].')';
        }
        return $res;
    }
    
    public static function doFetchOne($tableName, $columns = array(), $params = array())
    {
        $q = Doctrine_Query::create()->select(join(',', $columns));
        $params['limit'] = 1;
        $q = self::params($tableName, $q, $params);
        return $q->fetchOne();
    }
    
    
    public static function getPager($tableName, $columns = array(), $params = array(), $page=1)
    {
        $q = Doctrine_Query::create()->select(join(',', $columns));
        $q = self::params($tableName, $q, $params);

        $pager = new sfDoctrinePager($tableName, sfConfig::get('app_pager', 30));
        $pager->setPage($page);
        $pager->setQuery($q);
        $pager->init();
        
        return $pager;
    }
    
    public static function doCount($tableName, $params = array())
    {
        $q = Doctrine_Query::create()->select('count(id)');
        $q = self::params($tableName, $q, $params);
        return $q->count();
    }
    
}