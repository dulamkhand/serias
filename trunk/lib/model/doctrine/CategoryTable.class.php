<?php

/**
 * CategoryTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CategoryTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CategoryTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Category');
    }
    
    public function doExecute($params = array())
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
        
        return $q->execute();
    }
    
  
    public function doFetchArray($params = array())
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
                
        return $q->fetchArray();
    }
    
    
    public function updateSubcatsParentNames($parentId, $newName)
    {
        $q = Doctrine_Query::create()
            ->update('Category');
            $q->set('parent_name', '"'.$newName.'"');
            $q->where('parent_id = ?', $parentId);
            $q->andWhere('parent_name <> ?', $newName);
        $q->execute();
    }
    
    public function doFetchSelection($params = array())
    {
        $res = array();
        $rss = self::doFetchArray($params);
        foreach ($rss as $rs)
        {
          $res[$rs['id']] = $rs['name'];
        }
        return $res;
    }
  
    
    public function doFetchOne($params = array())
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
        return $q->fetchOne();
    }
    
  
    
    public function getPager($params = array(), $page=1)
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
                
        $pager = new sfDoctrinePager('Category', sfConfig::get('app_pager', 30));
        $pager->setPage($page);
        $pager->setQuery($q);
        $pager->init();
        
        return $pager;
    }
    
    public function doCount($params = array())
    {
        $q = Doctrine_Query::create()->select('count(id)');
        $q = self::params($q, $params);
        return $q->count();
    }
    
    private function params($q, $params = array())
    {
        $q->from('Category');

        if(isset($params['id']) && $params['id'] != null)
            $q->andWhere('id = ? ', array($params['id']));
            
        if(isset($params['idO']) && $params['idO'] != null)
            $q->andWhere('id <> ? ', array($params['idO']));
            
        if(isset($params['route']) && $params['route'] != null)
            $q->andWhere('route= ?', $params['route']);
            
        if(isset($params['type']) && $params['type'] != null)
            $q->andWhere('type = ? ', array($params['type']));
            
        if(isset($params['parentId']) && $params['parentId'] != null)
            $q->andWhere('parent_id = ? ', array($params['parentId']));
            
        if(isset($params['parentIdO']) && $params['parentIdO'] != null)
            $q->andWhere('parent_id <> ? ', array($params['parentIdO']));
            
        if(isset($params['position']) && $params['position'] != null)
            $q->andWhere('position = ? ', array($params['position']));

        if(isset($params['isActive'])) {
            if($params['isActive'] != "all" && in_array($params['isActive'], array('0', '1'))) // all ued filter hiihgui
                $q->andWhere('is_active = ?', $params['isActive']);
        } else {
            $q->andWhere('is_active = ?', 1);
        }

        if(isset($params['keyword']) && $params['keyword'] != null)
            $q->andWhere('name LIKE ? ', array('%'.$params['keyword'].'%'));
  
        $limit = isset($params['limit']) ? $params['limit'] : sfConfig::get('app_limit', 30);
        $q->limit($limit);
        
        $order = isset($params['order']) ? $params['order'] : 'sort DESC, type ASC, position ASC, name ASC';
        $q->orderBy($order);
  
        if(isset($params['groupBy']) && $params['groupBy']) 
            $q->groupBy($params['groupBy']);

        return $q;
    }
}